/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
/**
 *
 * @author User
 */
public class Rooms extends javax.swing.JFrame {


    /**
     * Creates new form Rooms
     */
    public Rooms() {
        initComponents();
         paymentMethod.setSelectedIndex(0);
         this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jlblFullname = new javax.swing.JLabel();
        jlblContactDetails = new javax.swing.JLabel();
        jlblRoom = new javax.swing.JLabel();
        jlblDate = new javax.swing.JLabel();
        jlblMethod = new javax.swing.JLabel();
        date = new javax.swing.JTextField();
        fullName = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        paymentMethod = new javax.swing.JComboBox<>();
        roomType = new javax.swing.JComboBox<>();
        Back_btn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        numberOfVisitors = new javax.swing.JComboBox<>();
        jlblRoom1 = new javax.swing.JLabel();
        jlblRoom2 = new javax.swing.JLabel();
        cellNo1 = new javax.swing.JTextField();
        RoomType = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlblFullname.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jlblFullname.setText("FULLNAME");
        jPanel2.add(jlblFullname, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 190, 30));

        jlblContactDetails.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jlblContactDetails.setText("CELL NUMBER");
        jPanel2.add(jlblContactDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 190, 30));

        jlblRoom.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jlblRoom.setText("NUMBER OF VISITORS");
        jPanel2.add(jlblRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 260, 30));

        jlblDate.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jlblDate.setText("DATE");
        jPanel2.add(jlblDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 220, 40));

        jlblMethod.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jlblMethod.setText("METHOD OF PAYMENT");
        jPanel2.add(jlblMethod, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 210, 40));

        date.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateActionPerformed(evt);
            }
        });
        jPanel2.add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 170, 180, 30));

        fullName.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        fullName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fullNameActionPerformed(evt);
            }
        });
        jPanel2.add(fullName, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 30, 180, 30));

        email.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jPanel2.add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 120, 180, 30));

        paymentMethod.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        paymentMethod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CASH", "VISA" }));
        paymentMethod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentMethodActionPerformed(evt);
            }
        });
        jPanel2.add(paymentMethod, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 310, 180, 30));

        roomType.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        roomType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SINGLE ROOM", "DELUX ROOM", "DOUBLE ROOM", "STANDARD ROOM" }));
        roomType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomTypeActionPerformed(evt);
            }
        });
        jPanel2.add(roomType, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 220, 180, 30));

        Back_btn.setBackground(new java.awt.Color(255, 0, 0));
        Back_btn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Back_btn.setText("BACK");
        Back_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_btnActionPerformed(evt);
            }
        });
        jPanel2.add(Back_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, 160, 40));

        jButton2.setBackground(new java.awt.Color(51, 204, 0));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton2.setText("RESERVE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 370, 160, 40));

        numberOfVisitors.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        numberOfVisitors.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        numberOfVisitors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberOfVisitorsActionPerformed(evt);
            }
        });
        jPanel2.add(numberOfVisitors, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 270, 180, 30));

        jlblRoom1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jlblRoom1.setText("ROOM TYPE");
        jPanel2.add(jlblRoom1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-110, 290, 260, 30));

        jlblRoom2.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jlblRoom2.setText("EMAIL");
        jPanel2.add(jlblRoom2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 260, 30));

        cellNo1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        cellNo1.setText("+264 ");
        jPanel2.add(cellNo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 70, 180, 30));

        RoomType.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        RoomType.setText("ROOM TYPE");
        jPanel2.add(RoomType, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 130, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 640, 500));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("BOOK A ROOM");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 650, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateActionPerformed

    private void fullNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fullNameActionPerformed

    private void paymentMethodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentMethodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paymentMethodActionPerformed

    private void roomTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomTypeActionPerformed

    private void Back_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_btnActionPerformed
        // TODO add your handling code here:
        roomsDetails rooms=new roomsDetails();
        this.dispose();
        rooms.setVisible(true);
    }//GEN-LAST:event_Back_btnActionPerformed

    private void numberOfVisitorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberOfVisitorsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numberOfVisitorsActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

    String theFullName =fullName.getText();
    String theEmail = email.getText();
    String celNo = cellNo1.getText();
    String dateString=date.getText();
    String maxPeople =(numberOfVisitors.getSelectedItem().toString());
    String selectedRoomType = roomType.getSelectedItem().toString();
    String thePaymentMethod = paymentMethod.getSelectedItem().toString();
   if (theFullName.isEmpty() || theEmail.isEmpty() || celNo.isEmpty() || dateString.isEmpty() ) {
        JOptionPane.showMessageDialog(null, "Please Fill In All Fields", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
      int atIndex = theEmail.indexOf("@");
    int dotIndex = theEmail.lastIndexOf(".");

    if (atIndex <= 0 || dotIndex <= atIndex || dotIndex == theEmail.length() - 1) {
        JOptionPane.showMessageDialog(null, "Invalid Email Address Format", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
      if (!isValidDate(dateString)) {
        JOptionPane.showMessageDialog(null, "Invalid Date Format. Please use dd/mm/yyyy", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    if (!isFutureDate(dateString)) {
        JOptionPane.showMessageDialog(null, "The Date You Entered In The Past", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }


    try {
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/HotelReservations", "root", "mysql");
        CallableStatement stmt = conn.prepareCall("{call InsertRoomReservation(?, ?, ?, ?, ?, ?, ?)}");
        stmt.setString(1, theFullName);
        stmt.setString(2, celNo); 
        stmt.setString(3, theEmail);
        stmt.setString(4, dateString);
        stmt.setString(5, selectedRoomType);
        stmt.setString(6, maxPeople);
        stmt.setString(7, thePaymentMethod);

        int rowsAffected = stmt.executeUpdate();

        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(null, "Room Reserved Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
        } 
        else {
            JOptionPane.showMessageDialog(null, "Failed To Reserve The Room", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Error Reserving Room: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
   
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Rooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Rooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Rooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Rooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Rooms().setVisible(true);
            }
        });
    }
    private boolean isValidDate(String date) {
    String regex = "^(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[012])/(\\d{4})$";
    Pattern pattern = Pattern.compile(regex);
    Matcher matcher = pattern.matcher(date);
    return matcher.matches();
}
    private boolean isFutureDate(String date) {
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
    LocalDate enteredDate = LocalDate.parse(date, formatter);
    LocalDate currentDate = LocalDate.now();
    return enteredDate.isAfter(currentDate) || enteredDate.equals(currentDate);
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back_btn;
    private javax.swing.JLabel RoomType;
    private javax.swing.JTextField cellNo1;
    private javax.swing.JTextField date;
    private javax.swing.JTextField email;
    private javax.swing.JTextField fullName;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel jlblContactDetails;
    private javax.swing.JLabel jlblDate;
    private javax.swing.JLabel jlblFullname;
    private javax.swing.JLabel jlblMethod;
    private javax.swing.JLabel jlblRoom;
    private javax.swing.JLabel jlblRoom1;
    private javax.swing.JLabel jlblRoom2;
    private javax.swing.JComboBox<String> numberOfVisitors;
    private javax.swing.JComboBox<String> paymentMethod;
    private javax.swing.JComboBox<String> roomType;
    // End of variables declaration//GEN-END:variables
}
